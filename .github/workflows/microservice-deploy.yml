name: Deploy Image Recognition Microservice

on:
  push:
    branches: [ main ]
    paths:
      - 'services/image_recognition/**'
      - 'schema/proto/**'

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: microservice
  ECS_CLUSTER: poc-cluster
  ECS_SERVICE: poc-microservice

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/image_recognition
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: uv sync

      - name: Run lint
        run: make lint

      - name: Run type check
        run: make type

      - name: Run tests
        run: make test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # リポジトリルートに移動してビルドコンテキストを設定
          cd ../..
          docker build -f services/image_recognition/Dockerfile \
            -t $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $REGISTRY/$ECR_REPOSITORY:latest
          docker push $REGISTRY/$ECR_REPOSITORY:latest

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment